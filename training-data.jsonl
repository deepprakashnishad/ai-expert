{"Client": "Self", "Project": "Calculator", "Module": "calculator.js", "Function Name": "updateDisplay", "Function Description": "This function updates results on calculator display", "Code Snippet": "function updateDisplay(value) {\n    display.textContent = value;\n}", "Version": 1, "Path": "calculator.js"}
{"Client": "Self", "Project": "Calculator", "Module": "calculator.js", "Function Name": "handleNumberClick", "Function Description": "This function handles when a number button is pressed. Depending on shouldResetDiaply global variable it would decide what action to perform. At last  updateDisplay function is called to update the display", "Code Snippet": "function handleNumberClick(number) {\n    if (shouldResetDisplay) {\n        currentInput = number;\n        shouldResetDisplay = false;\n    } else {\n        currentInput = currentInput === '0' ? number : currentInput + number;\n    }\n    updateDisplay(currentInput);\n}", "Version": 1, "Path": "calculator.js"}
{"Client": "Self", "Project": "Calculator", "Module": "calculator.js", "Function Name": "handleOperatorClick", "Function Description": "This function handles when a operator button is pressed.", "Code Snippet": "function handleOperatorClick(newOperator) {\n    if (operator && currentInput && firstOperand) {\n        const result = evaluateOperation(parseFloat(firstOperand), parseFloat(currentInput), operator);\n        currentInput = result.toString();\n        updateDisplay(currentInput);\n        shouldResetDisplay = true;\n    } else {\n        firstOperand = currentInput;\n        shouldResetDisplay = true;\n    }\n    operator = newOperator;\n}", "Version": 1, "Path": "calculator.js"}
{"Client": "Self", "Project": "Calculator", "Module": "calculator.js", "Function Name": "handleEqualsClick", "Function Description": "This function handles when equals button is clicked. It calculates final result depending on operator, firstOperand and currentInput", "Code Snippet": "function handleEqualsClick() {\n    if (operator && currentInput && firstOperand) {\n        const result = evaluateOperation(parseFloat(firstOperand), parseFloat(currentInput), operator);\n        updateDisplay(result.toString());\n        currentInput = result.toString();\n        firstOperand = '';\n        operator = '';\n    }\n}", "Version": 1, "Path": "calculator.js"}
{"Client": "Self", "Project": "Calculator", "Module": "calculator.js", "Function Name": "evaluateOperation", "Function Description": "This function performs operation based on operand that is selected. It is passed as third argument in the function", "Code Snippet": "function evaluateOperation(num1, num2, op) {\n    switch (op) {\n        case '+':\n            return num1 + num2;\n        case '-':\n            return num1 - num2;\n        case '*':\n            return num1 * num2;\n        case '/':\n            if (num2 === 0) {\n                return 'Error';\n            }\n            return num1 / num2;\n        default:\n            return 'Error';\n    }\n}", "Version": 1, "Path": "calculator.js"}